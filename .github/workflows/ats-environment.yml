name: ATS Environment Setup

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-environment:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ§© Checkout repository
        uses: actions/checkout@v4

      - name: ðŸ”‘ Save EC2 private key
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          printf "%s\n" "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

      - name: ðŸš€ Connect to EC2 and setup environment
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "ðŸš€ Connecting to EC2 and setting up environment..."

          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST <<'EOF'
            set -e

            echo 'ðŸ§± Creating Nginx config...'
            sudo tee /etc/nginx/sites-available/ats.conf > /dev/null <<'NGINX'
            server {
                listen 80;
                server_name ${HOST};
            
                root /var/www/ats/frontend/dist;
                index index.html;
            
                location / {
                    try_files \$uri \$uri/ /index.html;
                }
            
                location /backend/ {
                    rewrite ^/backend/?(.*)\$ /\$1 break;
                    proxy_pass http://127.0.0.1:8000/;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                }
            }
            NGINX

            sudo ln -sf /etc/nginx/sites-available/ats.conf /etc/nginx/sites-enabled/ats.conf
            sudo nginx -t
            sudo systemctl reload nginx

            echo "âœ… Nginx configuration applied successfully!"
          EOF

      - name: ðŸ§¹ Cleanup private key
        run: |
          shred -u private_key.pem
