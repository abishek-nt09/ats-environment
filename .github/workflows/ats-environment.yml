name: ATS Environment Setup

on:
  workflow_dispatch:  # Run manually from GitHub Actions tab

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Connect to EC2 and setup full environment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            echo "=== 🚀 Updating and installing dependencies ==="
            sudo apt update -y && sudo apt upgrade -y
            sudo apt install -y git nginx python3-venv python3-pip postgresql postgresql-contrib nodejs npm

            echo "=== 🗂️ Creating required directories ==="
            sudo mkdir -p /var/www/ats/{backend,frontend}
            sudo mkdir -p /var/www/ats-backups/backend
            sudo chown -R ubuntu:www-data /var/www/ats /var/www/ats-backups
            sudo chmod -R 775 /var/www/ats /var/www/ats-backups

            echo "=== 🧩 Setting up PostgreSQL ==="
            sudo -u postgres psql <<'EOF'
            DO $$
            BEGIN
                IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'ak_db') THEN
                    CREATE DATABASE ak_db;
                END IF;
                IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'ak_user') THEN
                    CREATE USER ak_user WITH PASSWORD 'navat';
                END IF;
                GRANT ALL PRIVILEGES ON DATABASE ak_db TO ak_user;
            END
            $$;
            EOF

            echo "=== ⚙️ Configuring Nginx ==="
            sudo bash -c 'cat > /etc/nginx/sites-available/ats.conf << "EOL"
            server {
                listen 80;
                server_name _;

                # FRONTEND (React/Vite)
                root /var/www/ats/frontend/dist;
                index index.html;

                location / {
                    try_files $uri /index.html;
                }

                # BACKEND (FastAPI)
                location /backend/ {
                    rewrite ^/backend/?(.*)$ /$1 break;
                    proxy_pass http://127.0.0.1:8000/;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                }

                client_max_body_size 50M;
            }
            EOL'

            sudo ln -sf /etc/nginx/sites-available/ats.conf /etc/nginx/sites-enabled/ats.conf
            sudo nginx -t && sudo systemctl reload nginx

            echo "=== ✅ Infrastructure setup completed successfully ==="
